//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stock.Clients.ProductsShop.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Stock.Clients.ProductsShop.ProductService.SmartWatchDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Stock.Clients.ProductsShop.ProductService.ElectronicBookDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Stock.Clients.ProductsShop.ProductService.PhoneDto))]
    public partial class ProductDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Stock.Clients.ProductsShop.ProductService.ManufacturerDto ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Stock.Clients.ProductsShop.ProductService.ManufacturerDto Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManufacturerDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    public partial class ManufacturerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartWatchDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    public partial class SmartWatchDto : Stock.Clients.ProductsShop.ProductService.ProductDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Stock.Clients.ProductsShop.ProductService.InterfaceForConnectingDto InterfaceForConnectingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PulsometerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScreenDiagonalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SimCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmartWatchIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Stock.Clients.ProductsShop.ProductService.InterfaceForConnectingDto InterfaceForConnecting {
            get {
                return this.InterfaceForConnectingField;
            }
            set {
                if ((object.ReferenceEquals(this.InterfaceForConnectingField, value) != true)) {
                    this.InterfaceForConnectingField = value;
                    this.RaisePropertyChanged("InterfaceForConnecting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Pulsometer {
            get {
                return this.PulsometerField;
            }
            set {
                if ((this.PulsometerField.Equals(value) != true)) {
                    this.PulsometerField = value;
                    this.RaisePropertyChanged("Pulsometer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScreenDiagonal {
            get {
                return this.ScreenDiagonalField;
            }
            set {
                if ((this.ScreenDiagonalField.Equals(value) != true)) {
                    this.ScreenDiagonalField = value;
                    this.RaisePropertyChanged("ScreenDiagonal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SimCard {
            get {
                return this.SimCardField;
            }
            set {
                if ((this.SimCardField.Equals(value) != true)) {
                    this.SimCardField = value;
                    this.RaisePropertyChanged("SimCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmartWatchId {
            get {
                return this.SmartWatchIdField;
            }
            set {
                if ((this.SmartWatchIdField.Equals(value) != true)) {
                    this.SmartWatchIdField = value;
                    this.RaisePropertyChanged("SmartWatchId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectronicBookDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    public partial class ElectronicBookDto : Stock.Clients.ProductsShop.ProductService.ProductDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatteryCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElectronicBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScreenDiagonalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Stock.Clients.ProductsShop.ProductService.ScreenTypeDto ScreenTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkingTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatteryCapacity {
            get {
                return this.BatteryCapacityField;
            }
            set {
                if ((this.BatteryCapacityField.Equals(value) != true)) {
                    this.BatteryCapacityField = value;
                    this.RaisePropertyChanged("BatteryCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElectronicBookId {
            get {
                return this.ElectronicBookIdField;
            }
            set {
                if ((this.ElectronicBookIdField.Equals(value) != true)) {
                    this.ElectronicBookIdField = value;
                    this.RaisePropertyChanged("ElectronicBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScreenDiagonal {
            get {
                return this.ScreenDiagonalField;
            }
            set {
                if ((this.ScreenDiagonalField.Equals(value) != true)) {
                    this.ScreenDiagonalField = value;
                    this.RaisePropertyChanged("ScreenDiagonal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Stock.Clients.ProductsShop.ProductService.ScreenTypeDto ScreenType {
            get {
                return this.ScreenTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenTypeField, value) != true)) {
                    this.ScreenTypeField = value;
                    this.RaisePropertyChanged("ScreenType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingTime {
            get {
                return this.WorkingTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingTimeField, value) != true)) {
                    this.WorkingTimeField = value;
                    this.RaisePropertyChanged("WorkingTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    public partial class PhoneDto : Stock.Clients.ProductsShop.ProductService.ProductDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatteryCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CameraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RAMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ROMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScreenDiagonalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatteryCapacity {
            get {
                return this.BatteryCapacityField;
            }
            set {
                if ((this.BatteryCapacityField.Equals(value) != true)) {
                    this.BatteryCapacityField = value;
                    this.RaisePropertyChanged("BatteryCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPU {
            get {
                return this.CPUField;
            }
            set {
                if ((object.ReferenceEquals(this.CPUField, value) != true)) {
                    this.CPUField = value;
                    this.RaisePropertyChanged("CPU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Camera {
            get {
                return this.CameraField;
            }
            set {
                if ((this.CameraField.Equals(value) != true)) {
                    this.CameraField = value;
                    this.RaisePropertyChanged("Camera");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhoneId {
            get {
                return this.PhoneIdField;
            }
            set {
                if ((this.PhoneIdField.Equals(value) != true)) {
                    this.PhoneIdField = value;
                    this.RaisePropertyChanged("PhoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RAM {
            get {
                return this.RAMField;
            }
            set {
                if ((this.RAMField.Equals(value) != true)) {
                    this.RAMField = value;
                    this.RaisePropertyChanged("RAM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ROM {
            get {
                return this.ROMField;
            }
            set {
                if ((this.ROMField.Equals(value) != true)) {
                    this.ROMField = value;
                    this.RaisePropertyChanged("ROM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScreenDiagonal {
            get {
                return this.ScreenDiagonalField;
            }
            set {
                if ((this.ScreenDiagonalField.Equals(value) != true)) {
                    this.ScreenDiagonalField = value;
                    this.RaisePropertyChanged("ScreenDiagonal");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceForConnectingDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    public partial class InterfaceForConnectingDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenTypeDto", Namespace="http://schemas.datacontract.org/2004/07/Stock.BL.DtoEntities")]
    [System.SerializableAttribute()]
    public partial class ScreenTypeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetData", ReplyAction="http://tempuri.org/IProductService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetData", ReplyAction="http://tempuri.org/IProductService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddPhone", ReplyAction="http://tempuri.org/IProductService/AddPhoneResponse")]
        void AddPhone(Stock.Clients.ProductsShop.ProductService.PhoneDto phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddPhone", ReplyAction="http://tempuri.org/IProductService/AddPhoneResponse")]
        System.Threading.Tasks.Task AddPhoneAsync(Stock.Clients.ProductsShop.ProductService.PhoneDto phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddElectronicBook", ReplyAction="http://tempuri.org/IProductService/AddElectronicBookResponse")]
        void AddElectronicBook(Stock.Clients.ProductsShop.ProductService.ElectronicBookDto electronicBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddElectronicBook", ReplyAction="http://tempuri.org/IProductService/AddElectronicBookResponse")]
        System.Threading.Tasks.Task AddElectronicBookAsync(Stock.Clients.ProductsShop.ProductService.ElectronicBookDto electronicBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddSmartWatch", ReplyAction="http://tempuri.org/IProductService/AddSmartWatchResponse")]
        void AddSmartWatch(Stock.Clients.ProductsShop.ProductService.SmartWatchDto smartWatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddSmartWatch", ReplyAction="http://tempuri.org/IProductService/AddSmartWatchResponse")]
        System.Threading.Tasks.Task AddSmartWatchAsync(Stock.Clients.ProductsShop.ProductService.SmartWatchDto smartWatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Collections.Generic.List<Stock.Clients.ProductsShop.ProductService.ProductDto> GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Stock.Clients.ProductsShop.ProductService.ProductDto>> GetAllProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : Stock.Clients.ProductsShop.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<Stock.Clients.ProductsShop.ProductService.IProductService>, Stock.Clients.ProductsShop.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public void AddPhone(Stock.Clients.ProductsShop.ProductService.PhoneDto phone) {
            base.Channel.AddPhone(phone);
        }
        
        public System.Threading.Tasks.Task AddPhoneAsync(Stock.Clients.ProductsShop.ProductService.PhoneDto phone) {
            return base.Channel.AddPhoneAsync(phone);
        }
        
        public void AddElectronicBook(Stock.Clients.ProductsShop.ProductService.ElectronicBookDto electronicBook) {
            base.Channel.AddElectronicBook(electronicBook);
        }
        
        public System.Threading.Tasks.Task AddElectronicBookAsync(Stock.Clients.ProductsShop.ProductService.ElectronicBookDto electronicBook) {
            return base.Channel.AddElectronicBookAsync(electronicBook);
        }
        
        public void AddSmartWatch(Stock.Clients.ProductsShop.ProductService.SmartWatchDto smartWatch) {
            base.Channel.AddSmartWatch(smartWatch);
        }
        
        public System.Threading.Tasks.Task AddSmartWatchAsync(Stock.Clients.ProductsShop.ProductService.SmartWatchDto smartWatch) {
            return base.Channel.AddSmartWatchAsync(smartWatch);
        }
        
        public System.Collections.Generic.List<Stock.Clients.ProductsShop.ProductService.ProductDto> GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Stock.Clients.ProductsShop.ProductService.ProductDto>> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
    }
}
